<UserControl x:Class="ModiPrint.Views.PrinterViews.AxisViews.AxisView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ModiPrint.Views.PrinterViews.AxisViews"
             xmlns:u="clr-namespace:ModiPrint.Utilities.IValueConverters"
             xmlns:uc="clr-namespace:ModiPrint.Utilities.ControlFunctions"
             xmlns:vControl="clr-namespace:ModiPrint.Views.ControlViews"
             mc:Ignorable="d">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    
    <StackPanel Orientation="Vertical">

        <!--#region Add Axis Button-->
        <Border HorizontalAlignment="Right"
                Style="{DynamicResource ThematicButtonBorder}">
            <Button Command="{Binding AddZAxisCommand}"
                    Style="{DynamicResource ThematicButton}"
                    Height="{DynamicResource StandardImageButtonHeight}">
                <Button.Template>
                    <ControlTemplate>
                        <StackPanel Orientation="Horizontal"
                                    Background="Transparent">
                            <Image Source="/Resources/Buttons/AddAxis.png"
                                   Height="{DynamicResource StandardImageButtonHeight}"
                                   Style="{DynamicResource ThematicControlImage}"
                                   Margin="0, 0, 0, 0"/>
                            <StackPanel Orientation="Vertical"
                                        VerticalAlignment="Center"
                                        Margin="5, 5, 5, 5">
                                <TextBlock Text="Add"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Margin="0, 0, 0, 0"/>
                                <TextBlock Text="Axis"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Margin="0, 0, 0, 0"/>
                            </StackPanel>
                        </StackPanel>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Border>
        <!--#endregion-->
        
        <!--#region Axes Tab-->
        <TabControl ItemsSource="{Binding AxisViewModelList}"
                    Style="{DynamicResource ThematicTabControl}">
            
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal"
                                Height="{DynamicResource StandardControlHeight}">
                        <Image Source="{Binding ImageSource}"
                               Style="{DynamicResource ThematicControlImage}"
                               Width="{DynamicResource NarrowControlWidth}"
                               Margin="0, 0, 0, 0"/>
                        <TextBlock Text="{Binding Name}"
                                   VerticalAlignment="Center"
                                   Style="{DynamicResource ThematicTabControlTextBlock}"
                                   Margin="0, 0, 0, 0"/>
                    </StackPanel>
                    
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">

                        <!--#region GPIO Pin Selection-->
                        
                        <!--Step Pin-->
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/Motor.png"
                                        Style="{DynamicResource ThematicControlImage}"
                                        Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Step Pin"
                                            Style="{DynamicResource ThematicTextBlock}"
                                            Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>

                            <ComboBox DisplayMemberPath="Name"
                                        ItemsSource="{Binding MotorStepPinViewModelList}"
                                        SelectedValue="{Binding AttachedMotorStepGPIOPinViewModel}"
                                        Style="{DynamicResource ThematicComboBox}"
                                        Height="{DynamicResource StandardControlHeight}" Width="{DynamicResource WideControlWidth}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownOpened">
                                        <i:InvokeCommandAction Command="{Binding RefreshPinBySettingListCommand}"
                                                                CommandParameter="MotorStepPinViewModelList"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                            <Button Command="{Binding ClearGPIOPinCommand}"
                                    CommandParameter="AttachedMotorStepGPIOPinViewModel"
                                    Height="{DynamicResource StandardControlHeight}">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <vControl:OpaqueClickableImage x:Name="Image" Source="/Resources/ImageButtons/Clear.png"/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="Image" Property="Source"
                                                        Value="/Resources/ImageButtons/ClearMouseOver.png"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="Image" Property="Source"
                                                        Value="/Resources/ImageButtons/Clear.png"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>

                        <!--Direction Pin-->
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/Motor.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Direction Pin"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>
                            
                            <ComboBox DisplayMemberPath="Name"
                                      ItemsSource="{Binding MotorDirectionPinViewModelList}"
                                      SelectedValue="{Binding AttachedMotorDirectionGPIOPinViewModel}"
                                      Style="{DynamicResource ThematicComboBox}"
                                      Height="{DynamicResource StandardControlHeight}" Width="{DynamicResource WideControlWidth}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownOpened">
                                        <i:InvokeCommandAction Command="{Binding RefreshPinBySettingListCommand}"
                                                               CommandParameter="MotorDirectionPinViewModelList"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                            <Button Command="{Binding ClearGPIOPinCommand}"
                                    CommandParameter="AttachedMotorDirectionGPIOPinViewModel"
                                    Height="{DynamicResource StandardControlHeight}">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <vControl:OpaqueClickableImage x:Name="Image" Source="/Resources/ImageButtons/Clear.png"/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="Image" Property="Source"
                                                        Value="/Resources/ImageButtons/ClearMouseOver.png"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="Image" Property="Source"
                                                        Value="/Resources/ImageButtons/Clear.png"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>

                        <!--Limit Pin-->
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/LimitSwitch.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Limit Switch Pin"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>

                            <ComboBox DisplayMemberPath="Name"
                                      ItemsSource="{Binding LimitSwitchPinViewModelList}"
                                      SelectedValue="{Binding AttachedLimitSwitchGPIOPinViewModel}"
                                      Style="{DynamicResource ThematicComboBox}"
                                      Height="{DynamicResource StandardControlHeight}" Width="{DynamicResource WideControlWidth}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownOpened">
                                        <i:InvokeCommandAction Command="{Binding RefreshPinBySettingListCommand}"
                                                               CommandParameter="LimitSwitchPinViewModelList"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                            <Button Command="{Binding ClearGPIOPinCommand}"
                                    CommandParameter="AttachedLimitSwitchGPIOPinViewModel"
                                    Height="{DynamicResource StandardControlHeight}">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <vControl:OpaqueClickableImage x:Name="Image" Source="/Resources/ImageButtons/Clear.png"/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="Image" Property="Source"
                                                        Value="/Resources/ImageButtons/ClearMouseOver.png"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="Image" Property="Source"
                                                        Value="/Resources/ImageButtons/Clear.png"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                        <!--#endregion-->
                       
                        <!--#region Axis Parameters-->
                        <StackPanel Orientation="Vertical">
                                
                            <!--Max Speed-->
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/MaxSpeed.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Max Speed"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                                <TextBox Text="{Binding Path=MaxSpeed, Mode=TwoWay, 
                                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                                         Style="{DynamicResource ThematicTextBox}"
                                         Width="{DynamicResource WideControlWidth}"/>
                                <TextBlock Text="mm/s"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>

                            <!--Max Acceleration-->
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/Acceleration.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Max Acceleration"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                                <TextBox Text="{Binding Path=MaxAcceleration, Mode=TwoWay, 
                                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                                         Style="{DynamicResource ThematicTextBox}"
                                         Width="{DynamicResource WideControlWidth}"/>
                                <TextBlock Text="mm/s²"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>

                            <!--Distance per Step-->
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/StepDistance.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Distance per Step"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                                <TextBox Text="{Binding Path=MmPerStep, Mode=TwoWay, 
                                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                                         Style="{DynamicResource ThematicTextBox}"
                                         Width="{DynamicResource WideControlWidth}"/>
                                <TextBlock Text="mm"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>

                            <!--Step Pulse Time-->
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/StepPulse.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Step Pulse Time"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                                <TextBox Text="{Binding Path=StepPulseTime, Mode=TwoWay, 
                                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                                         Style="{DynamicResource ThematicTextBox}"
                                         Width="{DynamicResource WideControlWidth}"/>
                                <TextBlock Text="us"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>

                            <!--Invert Direction-->
                            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        Height="{DynamicResource StandardControlHeight}">
                                <StackPanel.Resources>
                                    <ResourceDictionary>
                                        <ResourceDictionary.MergedDictionaries>
                                            <ResourceDictionary Source="/Views/GlobalResources.xaml"/>
                                        </ResourceDictionary.MergedDictionaries>

                                        <Style x:Key="ThematicInvertDirectionTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThematicTextBlock}">
                                            <Setter Property="Text" Value=""/>
                                            <Setter Property="HorizontalAlignment" Value="Right"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=tgbtnInvertDirection, Path=IsChecked}" Value="False">
                                                    <Setter Property="Text" Value="False"/>
                                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=tgbtnInvertDirection, Path=IsChecked}" Value="True">
                                                    <Setter Property="Text" Value="True"/>
                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ResourceDictionary>
                                </StackPanel.Resources>

                                <Image Source="/Resources/General/InvertDirection.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Invert Direction"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                                <Grid>
                                    <ToggleButton Name="tgbtnInvertDirection"
                                              IsChecked="{Binding Path=IsDirectionInverted}"
                                              Style="{DynamicResource ThematicToggleButton}"
                                              Width="{DynamicResource StandardToggleButtonWidth}"/>
                                    <TextBlock Style="{StaticResource ThematicInvertDirectionTextBlock}"
                                               IsHitTestVisible="False"
                                               Width="{DynamicResource NarrowControlWidth}"/>
                                </Grid>
                            </StackPanel>

                            <!--Max Position-->
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/MaxLimit.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Max Position"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                                <TextBox Text="{Binding Path=MaxPosition, Mode=TwoWay, 
                                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                                         Style="{DynamicResource ThematicTextBox}"
                                         Width="{DynamicResource WideControlWidth}"/>
                                <TextBlock Text="mm From Origin"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>

                            <!--Min Position-->
                            <StackPanel Orientation="Horizontal"
                                        Height="{DynamicResource StandardControlHeight}">
                                <Image Source="/Resources/General/MinLimit.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                                <TextBlock Text="Min Position"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                                <TextBox Text="{Binding Path=MinPosition, Mode=TwoWay, 
                                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                                         Style="{DynamicResource ThematicTextBox}"
                                         Width="{DynamicResource WideControlWidth}"/>
                                <TextBlock Text="mm From Origin"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                            </StackPanel>

                        </StackPanel>
                        <!--#endregion-->

                        <!--#region Remove Axis Button-->
                        <Border HorizontalAlignment="Right"
                                Style="{DynamicResource ThematicButtonBorder}"
                                Visibility="{Binding IsRemovable, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.RemoveZAxisCommand}"
                                    CommandParameter="{Binding Name}"
                                    Style="{DynamicResource ThematicButton}"
                                    Height="{DynamicResource StandardImageButtonHeight}">
                                <Button.Template>
                                    <ControlTemplate>
                                        <StackPanel Orientation="Horizontal"
                                                    Background="Transparent">
                                            <Image Source="/Resources/Buttons/RemoveAxis.png"
                                                   Height="{DynamicResource StandardImageButtonHeight}"
                                                   Style="{DynamicResource ThematicControlImage}"
                                                   Margin="0, 0, 0, 0"/>
                                            <StackPanel Orientation="Vertical"
                                                        VerticalAlignment="Center"
                                                        Margin="5, 5, 5, 5">
                                                <TextBlock Text="Remove"
                                                           Style="{DynamicResource ThematicTextBlock}"
                                                           Margin="0, 0, 0, 0"/>
                                                <TextBlock Text="Axis"
                                                           Style="{DynamicResource ThematicTextBlock}"
                                                           Margin="0, 0, 0, 0"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <!--#endregion-->
                        
                    </StackPanel>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        <!--#endregion-->

    </StackPanel>
</UserControl>
