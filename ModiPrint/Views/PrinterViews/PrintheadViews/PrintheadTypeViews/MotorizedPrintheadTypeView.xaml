<UserControl x:Class="ModiPrint.Views.PrinterViews.PrintheadViews.PrintheadTypeViews.MotorizedPrintheadTypeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:local="clr-namespace:ModiPrint.Views.PrinterViews.PrintheadViews.PrintheadTypeViews"
             xmlns:vc="clr-namespace:ModiPrint.Utilities.IValueConverters"
             xmlns:vControl="clr-namespace:ModiPrint.Views.ControlViews"
             mc:Ignorable="d">

    <!--The Datacontext is set inside this Usercontrol-->
    <!--This prevents a really weird Databinding bug with Datatriggered Datatemplates-->
    <UserControl.DataContext>
        <Binding Path="PrintheadTypeViewModel"/>
    </UserControl.DataContext>
    
    <GroupBox Header="Motorized Printhead Settings"
              Style="{DynamicResource ThematicGroupBox}">
        <StackPanel Orientation="Vertical">
            
            <!--#region Step Pin-->
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal"
                            Height="{DynamicResource StandardControlHeight}">
                    <Image Source="/Resources/General/Motor.png"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicControlImage}"/>
                    <TextBlock Text="Step Pin"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                </StackPanel>
                <ComboBox DisplayMemberPath="Name"
                          ItemsSource="{Binding MotorStepPinViewModelList}"
                          SelectedValue="{Binding AttachedMotorStepGPIOPinViewModel}"
                          Height="{DynamicResource StandardControlHeight}" Width="{DynamicResource WideControlWidth}"
                          Style="{DynamicResource ThematicComboBox}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DropDownOpened">
                            <i:InvokeCommandAction Command="{Binding RefreshPinBySettingListCommand}"
                                                   CommandParameter="MotorStepPinViewModelList"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button Command="{Binding ClearGPIOPinCommand}"
                        CommandParameter="AttachedMotorStepGPIOPinViewModel"
                        Height="{DynamicResource StandardControlHeight}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <vControl:OpaqueClickableImage x:Name="Image" Source="/Resources/ImageButtons/Clear.png"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Image" Property="Source"
                                            Value="/Resources/ImageButtons/ClearMouseOver.png"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Image" Property="Source"
                                            Value="/Resources/ImageButtons/Clear.png"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
            <!--#endregion-->

            <!--#region Direction Pin-->
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal"
                            Height="{DynamicResource StandardControlHeight}">
                    <Image Source="/Resources/General/Motor.png"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicControlImage}"/>
                    <TextBlock Text="Direction Pin"
                               Width="{DynamicResource StandardControlWidth}"
                               Style="{DynamicResource ThematicTextBlock}"/>
                </StackPanel>
                <ComboBox DisplayMemberPath="Name"
                          ItemsSource="{Binding MotorDirectionPinViewModelList}"
                          SelectedValue="{Binding AttachedMotorDirectionGPIOPinViewModel}"
                          Height="{DynamicResource StandardControlHeight}" Width="{DynamicResource WideControlWidth}"
                          Style="{DynamicResource ThematicComboBox}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DropDownOpened">
                            <i:InvokeCommandAction Command="{Binding RefreshPinBySettingListCommand}"
                                                   CommandParameter="MotorDirectionPinViewModelList"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button Command="{Binding ClearGPIOPinCommand}"
                        CommandParameter="AttachedMotorDirectionGPIOPinViewModel"
                        Height="{DynamicResource StandardControlHeight}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <vControl:OpaqueClickableImage x:Name="Image" Source="/Resources/ImageButtons/Clear.png"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Image" Property="Source"
                                            Value="/Resources/ImageButtons/ClearMouseOver.png"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Image" Property="Source"
                                            Value="/Resources/ImageButtons/Clear.png"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
            <!--#endregion-->

            <!--#region Limit Switch Pin-->
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal"
                            Height="{DynamicResource StandardControlHeight}">
                    <Image Source="/Resources/General/LimitSwitch.png"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicControlImage}"/>
                    <TextBlock Text="Limit Switch Pin"
                               Width="{DynamicResource StandardControlWidth}"
                               Style="{DynamicResource ThematicTextBlock}"/>
                </StackPanel>
                <ComboBox DisplayMemberPath="Name"
                          ItemsSource="{Binding LimitSwitchPinViewModelList}"
                          SelectedValue="{Binding AttachedLimitSwitchGPIOPinViewModel}"
                          Height="{DynamicResource StandardControlHeight}" Width="{DynamicResource WideControlWidth}"
                          Style="{DynamicResource ThematicComboBox}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DropDownOpened">
                            <i:InvokeCommandAction Command="{Binding RefreshPinBySettingListCommand}"
                                                   CommandParameter="LimitSwitchPinViewModelList"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button Command="{Binding ClearGPIOPinCommand}"
                        CommandParameter="AttachedLimitSwitchGPIOPinViewModel"
                        Height="{DynamicResource StandardControlHeight}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <vControl:OpaqueClickableImage x:Name="Image" Source="/Resources/ImageButtons/Clear.png"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Image" Property="Source"
                                            Value="/Resources/ImageButtons/ClearMouseOver.png"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Image" Property="Source"
                                            Value="/Resources/ImageButtons/Clear.png"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
            <!--#endregion-->

            <!--#region Max Speed-->
            <StackPanel Orientation="Horizontal"
                        Height="{DynamicResource StandardControlHeight}">
                <Image Source="/Resources/General/MaxSpeed.png"
                       Style="{DynamicResource ThematicControlImage}"
                       Width="{DynamicResource NarrowControlWidth}"/>
                <TextBlock Text="Max Speed"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                <TextBox Text="{Binding Path=MaxSpeed, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                         Width="{DynamicResource WideControlWidth}"
                         Style="{DynamicResource ThematicTextBox}"/>
                <TextBlock Text="mm/s"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
            </StackPanel>
            <!--#endregion-->

            <!--#region Max Acceleration-->
            <StackPanel Orientation="Horizontal"
                        Height="{DynamicResource StandardControlHeight}">
                <Image Source="/Resources/General/Acceleration.png"
                       Style="{DynamicResource ThematicControlImage}"
                       Width="{DynamicResource NarrowControlWidth}"/>
                <TextBlock Text="Max Acceleration"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                <TextBox Text="{Binding Path=MaxAcceleration, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                         Width="{DynamicResource WideControlWidth}"
                         Style="{DynamicResource ThematicTextBox}"/>
                <TextBlock Text="mm/s²"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
            </StackPanel>

            <!--#region mm Per Step-->
            <StackPanel Orientation="Horizontal"
                        Height="{DynamicResource StandardControlHeight}">
                <Image Source="/Resources/General/StepDistance.png"
                       Style="{DynamicResource ThematicControlImage}"
                       Width="{DynamicResource NarrowControlWidth}"/>
                <TextBlock Text="Distance per Step"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                <TextBox Text="{Binding Path=MmPerStep, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                         Width="{DynamicResource WideControlWidth}"
                         Style="{DynamicResource ThematicTextBox}"/>
                <TextBlock Text="mm"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
            </StackPanel>
            <!--#endregion-->

            <!--Step Pulse Time-->
            <StackPanel Orientation="Horizontal"
                        Height="{DynamicResource StandardControlHeight}">
                <Image Source="/Resources/General/StepPulse.png"
                       Width="{DynamicResource NarrowControlWidth}"
                       Style="{DynamicResource ThematicControlImage}"/>
                <TextBlock Text="Step Pulse Time"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                <TextBox Text="{Binding Path=StepPulseTime, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                         Width="{DynamicResource WideControlWidth}"
                         Style="{DynamicResource ThematicTextBox}"/>
                <TextBlock Text="us"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
            </StackPanel>

            <!--Invert Direction-->
            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        Height="{DynamicResource StandardControlHeight}">
                <StackPanel.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="/Views/GlobalResources.xaml"/>
                        </ResourceDictionary.MergedDictionaries>

                        <Style x:Key="ThematicInvertDirectionTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ThematicTextBlock}">
                            <Setter Property="Text" Value=""/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=tgbtnInvertDirection, Path=IsChecked}" Value="False">
                                    <Setter Property="Text" Value="False"/>
                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=tgbtnInvertDirection, Path=IsChecked}" Value="True">
                                    <Setter Property="Text" Value="True"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ResourceDictionary>
                </StackPanel.Resources>

                <Image Source="/Resources/General/InvertDirection.png"
                                       Style="{DynamicResource ThematicControlImage}"
                                       Width="{DynamicResource NarrowControlWidth}"/>
                <TextBlock Text="Invert Direction"
                                           Style="{DynamicResource ThematicTextBlock}"
                                           Width="{DynamicResource StandardControlWidth}"/>
                <Grid>
                    <ToggleButton Name="tgbtnInvertDirection"
                                              IsChecked="{Binding Path=IsDirectionInverted}"
                                              Style="{DynamicResource ThematicToggleButton}"
                                              Width="{DynamicResource StandardToggleButtonWidth}"/>
                    <TextBlock Style="{StaticResource ThematicInvertDirectionTextBlock}"
                                               IsHitTestVisible="False"
                                               Width="{DynamicResource NarrowControlWidth}"/>
                </Grid>
            </StackPanel>

            <!--Max Position-->
            <StackPanel Orientation="Horizontal"
                        Height="{DynamicResource StandardControlHeight}">
                <Image Source="/Resources/General/MaxLimit.png"
                       Style="{DynamicResource ThematicControlImage}"
                       Width="{DynamicResource NarrowControlWidth}"/>
                <TextBlock Text="Max Position"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                <TextBox Text="{Binding Path=MaxPosition, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                         Width="{DynamicResource WideControlWidth}"
                         Style="{DynamicResource ThematicTextBox}"/>
                <TextBlock Text="mm"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
            </StackPanel>

            <!--Min Position-->
            <StackPanel Orientation="Horizontal"
                        Height="{DynamicResource StandardControlHeight}">
                <Image Source="/Resources/General/MinLimit.png"
                       Width="{DynamicResource NarrowControlWidth}"
                       Style="{DynamicResource ThematicControlImage}"/>
                <TextBlock Text="Min Position"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                <TextBox Text="{Binding Path=MinPosition, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                         Width="{DynamicResource WideControlWidth}"
                         Style="{DynamicResource ThematicTextBox}"/>
                <TextBlock Text="mm"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
            </StackPanel>
            <!--#endregion-->
            
            <!--#region Resevoir Diamaeter-->
            <StackPanel Orientation="Horizontal"
                        Height="{DynamicResource StandardControlHeight}">
                <Image Source="/Resources/General/Diameter.png"
                       Width="{DynamicResource NarrowControlWidth}"
                       Style="{DynamicResource ThematicControlImage}"/>
                <TextBlock Text="Resevoir Diameter"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                <TextBox Text="{Binding Path=ResevoirDiameter, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                         Width="{DynamicResource WideControlWidth}"
                         Style="{DynamicResource ThematicTextBox}"/>
                <TextBlock Text="mm"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
            </StackPanel>
            <!--#endregion-->

            <!--#region Resevoir Volume-->
            <StackPanel Orientation="Horizontal"
                        Height="{DynamicResource StandardControlHeight}">
                <Image Source="/Resources/General/Volume.png"
                       Width="{DynamicResource NarrowControlWidth}"
                       Style="{DynamicResource ThematicControlImage}"/>
                <TextBlock Text="Resevoir Volume"
                           Width="{DynamicResource StandardControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
                <TextBox Text="{Binding Path=ResevoirVolume, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged, Delay=250}"
                         Width="{DynamicResource WideControlWidth}"
                         Style="{DynamicResource ThematicTextBox}"/>
                <TextBlock Text="mL"
                           Width="{DynamicResource NarrowControlWidth}"
                           Style="{DynamicResource ThematicTextBlock}"/>
            </StackPanel>
            <!--#endregion-->

        </StackPanel>
    </GroupBox>
    
</UserControl>
